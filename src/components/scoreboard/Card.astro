---
interface CardProps {
  player: IndusPlayer;
}

const { player } = Astro.props as CardProps;
const ifFirst = player.indusPosition === 1;
---

<div class={`w-full p-5 bg-gradient-to-br from-white to-gray-100 rounded-lg shadow-lg dark:from-gray-800 dark:to-gray-900 ${ifFirst ? "border-2 border-blue-500" : "border border-gray-200 dark:border-gray-700"}`}>
  <div class="flex items-center mb-6">
    <div class="relative">
      <img class="w-16 h-16 rounded-full mr-4 border-2 border-blue-500 shadow-md" src={player.team.manager.avatar} alt={`${player.team.manager.managerName} avatar`} />
      {ifFirst && (
        <span class="absolute -top-2 -right-2 bg-yellow-400 text-xs font-bold px-2 py-1 rounded-full shadow-sm">1st</span>
      )}
    </div>
    <div>
      <h5 class="text-2xl font-extrabold tracking-tight text-gray-900 dark:text-white">{player.team.manager.managerName}</h5>
      <div class="flex items-center text-sm font-medium text-gray-600 dark:text-gray-400">
        <span class="flex items-center">
          {player.previousPosition > player.position ? (
            <>
              <svg class="w-4 h-4 text-green-500 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 2l-7 7h4v7h6v-7h4l-7-7z" />
              </svg>
              <span>Moved Up by {player.previousPosition - player.position} positions</span>
            </>
          ) : player.previousPosition < player.position ? (
            <>
              <svg class="w-4 h-4 text-red-500 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 18l7-7h-4V4H8v7H4l6 6z" />
              </svg>
              <span>Moved Down by {player.position - player.previousPosition} positions</span>
            </>
          ) : (
            <>
              <svg class="w-4 h-4 text-gray-500 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 10h4v4h-4zM6 10h4v4H6z" />
              </svg>
              <span>No Change</span>
            </>
          )}
        </span>
      </div>
    </div>
  </div>
  
  <div class="space-y-3">
    <div class="flex justify-between items-center">
      <span class="text-md font-medium text-gray-700 dark:text-gray-300">Position:</span>
      <span class="text-lg font-bold text-blue-600 dark:text-blue-400">{player.position}</span>
    </div>
    <div class="flex justify-between items-center">
        <span class="text-md font-medium bg-gradient-to-r from-purple-500 via-pink-500 to-red-600 text-transparent bg-clip-text">IndusPoints:</span>
        <span class="text-lg font-bold text-green-600 dark:text-green-400">{player.indusPoints}</span>
      </div>
    <div class="flex justify-between items-center">
      <span class="text-md font-medium text-gray-700 dark:text-gray-300">Points:</span>
      <span class="text-lg font-bold text-green-600 dark:text-green-400">{player.points}</span>
    </div>
    <div class="flex justify-between items-center">
      <span class="text-md font-medium text-gray-700 dark:text-gray-300">Team Points:</span>
      <span class="text-lg font-bold text-purple-600 dark:text-purple-400">{player.team.teamPoints}</span>
    </div>
    <div class="flex justify-between items-center">
      <span class="text-md font-medium text-gray-700 dark:text-gray-300">Team Value:</span>
      <span class="text-lg font-bold text-yellow-600 dark:text-yellow-400">${player.team.teamValue.toLocaleString()}</span>
    </div>
  </div>
  
  {ifFirst && (
    <div class="mt-6 bg-blue-100 dark:bg-blue-900 rounded-md p-3">
      <p class="text-sm font-semibold text-blue-800 dark:text-blue-200">üèÜ Top performer this week!</p>
    </div>
  )}
</div>